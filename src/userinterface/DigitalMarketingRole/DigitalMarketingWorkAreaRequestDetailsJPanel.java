/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DigitalMarketingRole;

import Business.Application.Application;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DigitalMarketingOrganisation;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utils.BusinessUtils;
import Business.Utils.FacebookApiUtils;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.Utils.BusinessStatus;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

/**
 *
 * @author raunak
 */
public class DigitalMarketingWorkAreaRequestDetailsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private WorkRequest workRequest;
    private EcoSystem business;
    private DigitalMarketingOrganisation digitalMarketingOrganization;
    private DigitalMarketingWorkAreaJPanel parentPanel;

        static final Logger logger = Logger.getLogger(DigitalMarketingWorkAreaRequestDetailsJPanel.class);

    
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DigitalMarketingWorkAreaRequestDetailsJPanel(JPanel userProcessContainer, 
            UserAccount account, Enterprise enterprise , WorkRequest workRequest , EcoSystem business,
            DigitalMarketingOrganisation digitalMarketingOrganization, DigitalMarketingWorkAreaJPanel parentPanel) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.workRequest = workRequest;
        //valueLabel.setText(enterprise.getName());
        this.business = business;
        this.digitalMarketingOrganization = digitalMarketingOrganization;
        populateRequestTable();
        
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        if(workRequest instanceof Application){
            Application app = (Application) workRequest;
            this.cause.setText(app.getCause());
            this.amount.setText(String.valueOf(app.getAmountRequested()));    
            this.status.setText(app.getStatus());

            this.requiredBy.setText(String.valueOf(dateFormat.format(app.getRequiredBy())));
            this.payee.setText(app.getSender().getUsername());
            
        }
        
        this.parentPanel = parentPanel;
        
        refreshTable();
        
        if(workRequest.getStatus().equals(BusinessStatus.BckgrdChkApp.getValue())){
            requestTestJButton.setVisible(true);
        } else {
            requestTestJButton.setVisible(false);
        }
    }
    
    void refreshTable(){
        
        Application app = (Application) workRequest;
        
        if(app.getAdPostTime() == null) return;
        
        DefaultTableModel model = (DefaultTableModel) adTImeJTable.getModel();

        model.setRowCount(0);

       
        for (Date date : app.getAdPostTime()) {

                Object[] row = new Object[5];
                row[0] = date;

                model.addRow(row);
                
            }
        }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) adTImeJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        adTImeJTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        payee = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cause = new javax.swing.JLabel();
        amount = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        facebookButton = new javax.swing.JButton();
        requestTestJButton = new javax.swing.JButton();
        requiredByLabel = new javax.swing.JLabel();
        requiredBy = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        adTImeJTable.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        adTImeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Advertised time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adTImeJTable);
        if (adTImeJTable.getColumnModel().getColumnCount() > 0) {
            adTImeJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(556, 125, 662, 362);

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        jLabel7.setText("Advertise Over:");
        add(jLabel7);
        jLabel7.setBounds(82, 166, 104, 17);

        statusLabel.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        statusLabel.setText("Status:");
        add(statusLabel);
        statusLabel.setBounds(82, 294, 46, 17);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        jLabel2.setText("Payee:");
        add(jLabel2);
        jLabel2.setBounds(82, 131, 43, 17);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        jLabel4.setText("Amount Requested:");
        add(jLabel4);
        jLabel4.setBounds(82, 259, 135, 17);

        payee.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        payee.setText("<PayeeText>");
        add(payee);
        payee.setBounds(318, 131, 175, 17);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        jLabel3.setText("Cause:");
        add(jLabel3);
        jLabel3.setBounds(82, 224, 46, 17);

        cause.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        cause.setText("<CauseText>");
        add(cause);
        cause.setBounds(320, 224, 95, 17);

        amount.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        amount.setText("<AmountRequested>");
        add(amount);
        amount.setBounds(320, 259, 149, 17);

        status.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        status.setText("<Status>");
        add(status);
        status.setBounds(320, 294, 64, 17);

        facebookButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        facebookButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DigitalMarketingRole/fb_1.png"))); // NOI18N
        facebookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facebookButtonActionPerformed(evt);
            }
        });
        add(facebookButton);
        facebookButton.setBounds(318, 166, 41, 40);

        requestTestJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        requestTestJButton.setText("Forward Request to Organizer");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton);
        requestTestJButton.setBounds(82, 364, 438, 74);

        requiredByLabel.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        requiredByLabel.setText("Required By:");
        add(requiredByLabel);
        requiredByLabel.setBounds(82, 329, 85, 17);

        requiredBy.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        requiredBy.setText("<Date>");
        add(requiredBy);
        requiredBy.setBounds(320, 329, 53, 17);

        backBtn.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(82, 444, 141, 43);

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/apple/Downloads/images-for-fr/dm.jpg")); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1640, 1090);
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed

        workRequest.setStatus(BusinessStatus.Advertised.getValue());
        
        if(BusinessUtils.sendEmail(((Application)workRequest).getPayeeEmail()
                ,"Your application's background check for "+((Application)workRequest).getCause()+" cause is advertised! "
                        + "Kudos!","Information regarding your new Fund Request").equals("unsuccessful")){
//            return;
        } 
        
        BusinessUtils.addToNextQueue(null, Organization.Type.FundRainser, workRequest, this.business, this.enterprise);
        
        JOptionPane.showMessageDialog(null, "Request forwarded to Organizer Successfully!");
        logger.info("Request forwarded to Organizer Successfully!");
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
        this.parentPanel.populateRequestTable();
        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        
    }//GEN-LAST:event_backBtnActionPerformed

    private void facebookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facebookButtonActionPerformed
        // TODO add your handling code here:

        String message = "Fund Raising Required! \n"
        + " From: "+ payee.getText() +"\n"
        + " Amount requested: " + amount.getText() +"\n"
        + " Cause: " + cause.getText() +"\n"
        + " Please log into the Application to donate or get more information!";

        try{
            FacebookApiUtils.postToFacebook(message);
        }catch(Exception e){
            
        }
        
        logger.info("Ad posted to Facebook");
        
        JOptionPane.showMessageDialog(null, "Ad posted to Facebook Successfully!");
        
        ((Application)this.workRequest).addAdPostTime(new Date());

        refreshTable();

    }//GEN-LAST:event_facebookButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adTImeJTable;
    private javax.swing.JLabel amount;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel cause;
    private javax.swing.JButton facebookButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel payee;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel requiredBy;
    private javax.swing.JLabel requiredByLabel;
    private javax.swing.JLabel status;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
