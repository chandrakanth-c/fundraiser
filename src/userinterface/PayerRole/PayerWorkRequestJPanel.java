/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PayerRole;

import Business.Application.Application;
import Business.Application.SplitVolunteerRequest;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PayerOrganization;
import Business.UserAccount.UserAccount;
import Business.UserAccount.VolunteerAccount;
import Business.UserAccount.VolunteerAccount;
import Business.Utils.BusinessUtils;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import org.apache.log4j.Logger;
import userinterface.BackgroundCheckRole.BackgroundCheckWorkAreaJPanel;
import userinterface.MainJFrame;
import userinterface.OrganizerRole.VolunteerPerformanceJPanel;

/**
 *
 * @author pavanrao
 */
public class PayerWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PayerWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;
    private WorkRequest workRequest;

    final Logger logger = Logger.getLogger(MainJFrame.class);

    public PayerWorkRequestJPanel(JPanel userProcessContainer, WorkRequest workRequest, UserAccount account, Enterprise enterprise) throws IOException {
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.workRequest = workRequest;

        initComponents();

        jLabel3.setText(((Application) this.workRequest).getCause());
        jLabel5.setText(this.workRequest.getSender().getEmployee().getName());
        jLabel7.setText(Double.toString(((Application) this.workRequest).getAmountRequired()));
        availableVolunteers.removeAllItems();

        String visa = "/Users/apple/Documents/AED/GroupAssignmentNew/Final_project_returns/bitbyte-binary_aeddesignassignment/EcoSystem/src/userinterface/PayerRole/Visa.png";
        myImg = new ImageIcon(visa);
        img = myImg.getImage().getScaledInstance(210, 103, Image.SCALE_SMOOTH);
        myImg = new ImageIcon(img);
        jLabel14.setIcon(myImg);
        String master = "/Users/apple/Documents/AED/GroupAssignmentNew/Final_project_returns/bitbyte-binary_aeddesignassignment/EcoSystem/src/userinterface/PayerRole/MasterCard.jpg";
        myImg = new ImageIcon(master);
        img = myImg.getImage().getScaledInstance(210, 103, Image.SCALE_SMOOTH);
        myImg = new ImageIcon(img);
        jLabel15.setIcon(myImg);
        String paypal = "/Users/apple/Documents/AED/GroupAssignmentNew/Final_project_returns/bitbyte-binary_aeddesignassignment/EcoSystem/src/userinterface/PayerRole/PayPal.jpg";
        myImg = new ImageIcon(paypal);
        img = myImg.getImage().getScaledInstance(210, 103, Image.SCALE_SMOOTH);
        myImg = new ImageIcon(img);
        jLabel16.setIcon(myImg);

        Set<VolunteerAccount> set = new HashSet<VolunteerAccount>();
        for (SplitVolunteerRequest req : ((Application) workRequest).getChildren()) {
            if (req.getAssignedToVolunteer() != null) {
                set.add(req.getAssignedToVolunteer());
            }

        }

        for (VolunteerAccount vol : set) {
            availableVolunteers.addItem(vol.getEmployee().getName());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        availableVolunteers = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();

        setLayout(null);

        jLabel2.setText("Cause");
        add(jLabel2);
        jLabel2.setBounds(100, 118, 38, 16);

        jLabel3.setText("jLabel3");
        add(jLabel3);
        jLabel3.setBounds(354, 118, 120, 16);

        jLabel4.setText("Payee");
        add(jLabel4);
        jLabel4.setBounds(100, 161, 35, 16);

        jLabel5.setText("jLabel5");
        add(jLabel5);
        jLabel5.setBounds(354, 161, 140, 16);

        jLabel6.setText("Amount required");
        add(jLabel6);
        jLabel6.setBounds(100, 210, 106, 16);

        jLabel7.setText("jLabel7");
        add(jLabel7);
        jLabel7.setBounds(354, 210, 120, 16);

        jLabel8.setText("Amount willing to pay");
        add(jLabel8);
        jLabel8.setBounds(100, 259, 139, 16);
        add(jTextField1);
        jTextField1.setBounds(354, 254, 109, 26);

        jLabel9.setText("Volunteer's name");
        add(jLabel9);
        jLabel9.setBounds(100, 302, 108, 16);

        jLabel10.setText("Card number");
        add(jLabel10);
        jLabel10.setBounds(100, 350, 81, 16);

        jLabel11.setText("CVV");
        add(jLabel11);
        jLabel11.setBounds(100, 392, 25, 16);

        jLabel12.setText("Passcode");
        add(jLabel12);
        jLabel12.setBounds(100, 438, 58, 16);

        jButton1.setText("MAKE PAYMENT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(210, 497, 132, 52);
        add(jFormattedTextField1);
        jFormattedTextField1.setBounds(354, 345, 110, 26);
        add(jPasswordField1);
        jPasswordField1.setBounds(354, 387, 110, 26);
        add(jPasswordField2);
        jPasswordField2.setBounds(354, 433, 110, 26);

        jLabel13.setText("Supported Payment Types:");
        add(jLabel13);
        jLabel13.setBounds(578, 47, 186, 50);
        add(jLabel14);
        jLabel14.setBounds(563, 244, 210, 103);
        add(jLabel15);
        jLabel15.setBounds(563, 123, 210, 103);
        add(jLabel16);
        jLabel16.setBounds(563, 365, 210, 103);

        availableVolunteers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        availableVolunteers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableVolunteersActionPerformed(evt);
            }
        });
        add(availableVolunteers);
        availableVolunteers.setBounds(354, 298, 96, 27);

        jLabel17.setIcon(new javax.swing.ImageIcon("/Users/apple/Downloads/images-for-fr/payerrr.jpeg")); // NOI18N
        add(jLabel17);
        jLabel17.setBounds(0, 0, 1530, 1130);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try{
            Double.parseDouble(jTextField1.getText());
            if(Double.parseDouble(jTextField1.getText())<0){
                JOptionPane.showMessageDialog(null, "Please enter a valid amount");
                return;
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter a valid amount");
                jTextField1.setText("");
                return;
        }
        
        try{
            Integer.parseInt(jFormattedTextField1.getText());
            if(Integer.parseInt(jFormattedTextField1.getText())<0){
                JOptionPane.showMessageDialog(null, "Please enter a valid card number");
                return;
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter a valid card number");
                jFormattedTextField1.setText("");
                return;
        }
        
        try{
            Integer.parseInt(jPasswordField1.getText());
            if(Integer.parseInt(jPasswordField1.getText())<0){
                JOptionPane.showMessageDialog(null, "Please enter a cvv");
                return;
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter a cvv");
                jPasswordField1.setText("");
                return;
        }
        
        try{
            Integer.parseInt(jPasswordField2.getText());
            if(Integer.parseInt(jPasswordField2.getText())<0){
                JOptionPane.showMessageDialog(null, "Please enter a valid pin");
                return;
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter a valid pin");
                jPasswordField2.setText("");
                return;
        }
        
        
        
        
//        Double money = Double.parseDouble(jTextField1.getText());
//        String selectedVolunteer = (String) availableVolunteers.getSelectedItem();
//
//        for (SplitVolunteerRequest req : ((Application) workRequest).getChildren()) {
//            if (req.getTaskStatus().equals(Business.Utils.BusinessStatus.InProgress.getValue())
//                    && req.getAssignedToVolunteer().getEmployee().getName().equals(selectedVolunteer)) {
//
//                req.setAmountAchieved(req.getAmountAchieved() + money);
//                if (req.getSplitAmountRequired() - req.getAmountAchieved() >= 0.0) {
//                    req.setSplitAmountRequired(req.getSplitAmountRequired() - req.getAmountAchieved());
//                } else {
//                    req.setSplitAmountRequired(0.0);
//                }
//
//                Application parentRequest = (Application) req.getParentWorkRequest();
//                parentRequest.setAmountCollected(parentRequest.getAmountCollected() + money);
//                if (parentRequest.getAmountRequired() - parentRequest.getAmountCollected() >= 0) {
//                    parentRequest.setAmountRequired(parentRequest.getAmountRequired() - parentRequest.getAmountCollected());
//                } else {
//                    parentRequest.setAmountRequired(0.0);
//                }
//
//                if (req.getAmountAchieved() >= req.getSplitAmount()) {
//                    req.setStatus(Business.Utils.BusinessStatus.Fulfilled.getValue());
//                    if (req.getAmountAchieved() >= parentRequest.getAmountRequested()) {
//                        parentRequest.setStatus(Business.Utils.BusinessStatus.Fulfilled.getValue());
//                    }
//                    if (BusinessUtils.sendEmail(((Application) parentRequest).getPayeeEmail(),
//                             "Wohoo! Your fund for " + ((Application) parentRequest).getCause() + 
//                                     " cause is ready!", "Information regarding your new Fund Request").equals("unsuccessful")) {
//                        return;
//                    }
//                }
//                break;
//            }
//        }
//
//        JOptionPane.showMessageDialog(null, "Payment successful! Thank you for your kind gesture! :)");
//        logger.info("Payment successful! Thank you for your kind gesture!");
//        jLabel7.setText(Double.toString(((Application) this.workRequest).getAmountRequired()));
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//        userProcessContainer.add(new ThankYouJPanel());
//        layout.next(userProcessContainer);

        Double money = Double.parseDouble(jTextField1.getText());
        String selectedVolunteer = (String) availableVolunteers.getSelectedItem();
        
        //if(enterprise.getEnterpriseType().toString().equals("Payee")){
            
//            Pattern p = Pattern.compile("^[0-9]{12}");
//            Matcher m = p.matcher(jTextField1.getText());
//            
//            if(!m.matches()){
//                JOptionPane.showMessageDialog(null, "Please enter the valid card number!");
//                jTextField1.setBorder(new LineBorder(Color.RED, 2));
//                return;
//            }else{
//                jTextField1.setBorder(new LineBorder(Color.GRAY,1));
//            }
        //}
        
        for(SplitVolunteerRequest req : ((Application)workRequest).getChildren()){
            if(req.getTaskStatus().equals(Business.Utils.BusinessStatus.InProgress.getValue()) &&
               req.getAssignedToVolunteer().getEmployee().getName().equals(selectedVolunteer)) {
                
                req.setAmountAchieved(req.getAmountAchieved()+money);
                if(req.getSplitAmountRequired()-req.getAmountAchieved() >= 0.0)
                    req.setSplitAmountRequired(req.getSplitAmountRequired()-req.getAmountAchieved());
                else
                    req.setSplitAmountRequired(0.0);
                
                Application parentRequest = (Application)req.getParentWorkRequest();
                parentRequest.setAmountCollected(parentRequest.getAmountCollected()+money);
                if(parentRequest.getAmountRequired()-parentRequest.getAmountCollected() >= 0)
                    parentRequest.setAmountRequired(parentRequest.getAmountRequired()-parentRequest.getAmountCollected());
                else
                    parentRequest.setAmountRequired(0.0);
                
                if(req.getAmountAchieved() >= req.getSplitAmount()) {
                    req.setStatus(Business.Utils.BusinessStatus.Fulfilled.getValue());
                
                    if(parentRequest.getAmountCollected() >= parentRequest.getAmountRequested()){
                        parentRequest.setStatus(Business.Utils.BusinessStatus.Fulfilled.getValue());
                        BusinessUtils.sendEmail(((Application) parentRequest).getPayeeEmail(),"Wohoo! Your fund for " + ((Application) parentRequest).getCause() + " cause is ready!", "Information regarding your new Fund Request");
                    }
                
                }
                break;
            }
        }
        
        JOptionPane.showMessageDialog(null, "Payment successful! Thank you for your kind gesture! :)");
        logger.info("Payment successful! Thank you for your kind gesture!");
        jLabel7.setText(Double.toString(((Application)this.workRequest).getAmountRequired()));
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add(new ThankYouJPanel());
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPasswordField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2ActionPerformed

    private void availableVolunteersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableVolunteersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableVolunteersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> availableVolunteers;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    private ImageIcon myImg;
    private Image img;
}
