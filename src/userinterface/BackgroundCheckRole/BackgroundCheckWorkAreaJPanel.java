/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.BackgroundCheckRole;

import Business.Application.Application;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.FundRaiserOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utils.BusinessStatus;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.net.MalformedURLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.ManageNetworkJPanel;
import org.apache.log4j.Logger;
import userinterface.MainJFrame;
import userinterface.WalletDialogBox.TopUp;
import userinterface.PayerRole.PayerWorkAreaJPanel;

/**
 *
 * @author apple
 */
public class BackgroundCheckWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BackgroundCheckWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem ecosystem;
    private FundRaiserOrganization fundRaiserOrg;
    private EcoSystem business;
    final Logger logger = Logger.getLogger(MainJFrame.class);

    public BackgroundCheckWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, FundRaiserOrganization fundRaiserOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.fundRaiserOrg=fundRaiserOrganization;
        this.business = business;
        //payeeUsrLbl.setText(enterprise.getName());
        
        //Setting the user
        welcomeLbl.setText("Welcome "+account.getEmployee().getName().toUpperCase()+"!");
        
        //populating the filters
        comboPayeeReq.addItem("Pending action");
        comboPayeeReq.addItem(BusinessStatus.BckgrdChkApp.getValue());
        comboPayeeReq.addItem(BusinessStatus.BckgrdChkRej.getValue());
        comboPayeeReq.addItem(BusinessStatus.BckgrdChkReq.getValue());
        
        lblWalletAmt.setText("Wallet money: "+Double.toString(account.getWalletMoney()));
        
        populateTable();
           
    }
    
    public void refresh(){
        lblWalletAmt.setText("Wallet money: "+Double.toString(userAccount.getWalletMoney()));
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblBckgrdChk.getModel();
        
        model.setRowCount(0);
        
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        
        for(WorkRequest request : fundRaiserOrg.getWorkQueue().getWorkRequestList()){
            String status = ((Application)request).getStatus();
            if(status.equals(BusinessStatus.BckgrdChkReq.getValue()) ) {

                Object[] row = new Object[6];
                row[0] = request;
                row[1] = ((Application)request).getCause();
                row[2] = dateFormat.format(request.getRequestDate());
                if(((Application)request).getRequiredBy() != null){
                    row[3] = dateFormat.format(((Application)request).getRequiredBy());
                }
                row[4] = request.getStatus();
                row[5] = ((Application)request).getAmountRequested();

                model.addRow(row);
            }
        }
    }
    
    public void filterPopulateTable(String s){
        
        DefaultTableModel model = (DefaultTableModel)tblBckgrdChk.getModel();
        
        model.setRowCount(0);
        
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        
        for(WorkRequest request : fundRaiserOrg.getWorkQueue().getWorkRequestList()){
            if(request.getStatus().equals(s)){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = ((Application)request).getCause();
            row[2] = dateFormat.format(request.getRequestDate());
            if(((Application)request).getRequiredBy() != null){
                row[3] = dateFormat.format(((Application)request).getRequiredBy());
            }
            row[4] = request.getStatus();
            row[5] = ((Application)request).getAmountRequested();
            
            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBckgrdChk = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        lblWalletAmt = new javax.swing.JLabel();
        btnTopUp = new javax.swing.JButton();
        comboPayeeReq = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        btnRequest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        welcomeLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        welcomeLbl.setText("Welcome");
        add(welcomeLbl);
        welcomeLbl.setBounds(82, 72, 410, 22);

        tblBckgrdChk.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        tblBckgrdChk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Payee", "Cause", "Requested date", "Resolution date", "Status", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBckgrdChk);

        add(jScrollPane1);
        jScrollPane1.setBounds(93, 284, 1129, 167);

        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jButton1.setText("Take action");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(574, 512, 190, 65);

        lblWalletAmt.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        lblWalletAmt.setText("Wallet Amount: $x");
        add(lblWalletAmt);
        lblWalletAmt.setBounds(824, 110, 173, 19);

        btnTopUp.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        btnTopUp.setText("TopUp Wallet");
        btnTopUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopUpActionPerformed(evt);
            }
        });
        add(btnTopUp);
        btnTopUp.setBounds(1025, 96, 189, 49);

        comboPayeeReq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPayeeReqItemStateChanged(evt);
            }
        });
        comboPayeeReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPayeeReqActionPerformed(evt);
            }
        });
        add(comboPayeeReq);
        comboPayeeReq.setBounds(471, 206, 252, 27);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 2, 14)); // NOI18N
        jLabel6.setText("Search by Status");
        add(jLabel6);
        jLabel6.setBounds(269, 209, 161, 17);

        btnPay.setText("Pay money");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        add(btnPay);
        btnPay.setBounds(0, 0, 0, 0);

        btnRequest.setText("Request money");
        add(btnRequest);
        btnRequest.setBounds(0, 0, 0, 0);

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/apple/Downloads/images-for-fr/payee3.jpg")); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1600, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblBckgrdChk.getSelectedRow();
        
        if (selectedRow >= 0) {
            
            WorkRequest wr = (WorkRequest) tblBckgrdChk.getValueAt(selectedRow, 0);
            
            if(!wr.getStatus().equals(BusinessStatus.BckgrdChkReq.getValue())){
                JOptionPane.showMessageDialog(null, "Work requests only of status Background check requested can be taken action upon.");
                return;
            }
            
//            wr.setStatus(BusinessStatus.BckgrdChkReq.getValue());
            
            BackgroundTakeActionJPanel manageNetworkJPanel = null;
            
            try {
                manageNetworkJPanel = new BackgroundTakeActionJPanel(userProcessContainer, wr,this.business, this.fundRaiserOrg, this.enterprise);
            } catch (MalformedURLException ex) {
                logger.info("Exception occured in "+BackgroundCheckWorkAreaJPanel.class.getName()+" and the exception is "+ex);
            }
            
            userProcessContainer.add("manageNetworkJPanel",manageNetworkJPanel);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row.");
        }
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnTopUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopUpActionPerformed
        // TODO add your handling code here:

        TopUp t=new TopUp(this.userAccount,this);
        t.setVisible(true);
    }//GEN-LAST:event_btnTopUpActionPerformed

    private void comboPayeeReqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPayeeReqItemStateChanged
        // TODO add your handling code here:
        if(comboPayeeReq.getSelectedItem().equals("Submitted")){
            filterPopulateTable(BusinessStatus.Submitted.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.BckgrdChkReq.getValue())){
            filterPopulateTable(BusinessStatus.BckgrdChkReq.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.BckgrdChkApp.getValue())){
            filterPopulateTable(BusinessStatus.BckgrdChkApp.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.BckgrdChkRej.getValue())){
            filterPopulateTable(BusinessStatus.BckgrdChkRej.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.Advertised.getValue())){
            filterPopulateTable(BusinessStatus.Advertised.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.InProgress.getValue())){
            filterPopulateTable(BusinessStatus.InProgress.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.Fulfilled.getValue())){
            filterPopulateTable(BusinessStatus.Fulfilled.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.UnFulfilled.getValue())){
            filterPopulateTable(BusinessStatus.UnFulfilled.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.ReadyToPick.getValue())){
            filterPopulateTable(BusinessStatus.ReadyToPick.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.VInProgress.getValue())){
            filterPopulateTable(BusinessStatus.VInProgress.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.VFulfilled.getValue())){
            filterPopulateTable(BusinessStatus.VFulfilled.getValue());
        }else if(comboPayeeReq.getSelectedItem().equals(BusinessStatus.VUnfulfilled.getValue())){
            filterPopulateTable(BusinessStatus.VUnfulfilled.getValue());
        }else{
            populateTable();
        }
    }//GEN-LAST:event_comboPayeeReqItemStateChanged

    private void comboPayeeReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPayeeReqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPayeeReqActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnRequest;
    private javax.swing.JButton btnTopUp;
    private javax.swing.JComboBox<String> comboPayeeReq;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWalletAmt;
    private javax.swing.JTable tblBckgrdChk;
    private javax.swing.JLabel welcomeLbl;
    // End of variables declaration//GEN-END:variables
}
